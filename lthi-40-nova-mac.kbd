(defcfg
  ;; Windows waiting for key repeat
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; Mac 
  input (iokit-name)
  output (kext)
)

(defalias
  ;; Layer toggles
  ltdf (layer-toggle default)
  tnrn (tap-next ret (layer-toggle nv))
  tnes (tap-next esc C-A-M-S)
  ;; tnsn (tap-hold-next-release 180 spc (layer-toggle nm))
  tnbs (tap-next bspc (layer-toggle sf))
  tnfn (tap-next M-` (layer-toggle fn))
  tnsf (tap-hold-next-release 180 n (layer-toggle nm))
  tnbm (tap-hold-next-release 180 b (layer-toggle bsm))
  lahl (layer-add hl)
  lrhl (layer-rem hl)

  ;; Home Keys
  thjs (tap-hold-next-release 250 j lsft)
  thkc (tap-hold-next-release 250 k lmet)
  thla (tap-hold-next-release 250 l lalt)
  thsr (tap-hold-next-release 250 ; lctl)
  thfs (tap-hold-next-release 250 f lsft)
  thdc (tap-hold-next-release 250 d lmet)
  thsa (tap-hold-next-release 250 s lalt)
  thar (tap-hold-next-release 250 a lctl)

  ;; Shortcuts
  red M-y
  pas M-v
  cop M-c
  cut M-x
  und M-z
)

(defsrc
  1    2    3    4    5    6    7    8    9    0   -    
  q    w    e    r    t    y    u    i    o    p   [    
  a    s    d    f    g    h    j    k    l    ;   '    
  z    x    c    v    b    n    m    ,    .    /   rsft 
)

(deflayer default
  q     w     e     r      t     _     y     u     i   o     p
  a     s     d     @thfs  g     @lahl h     @thjs k   l     ;
  z     x     c     v      @tnbm _     @tnsf m     ,   .     /
  _     _     @tnes @tnrn  tab   @tnfn spc   @tnbs _   _     _
)

(deflayer hl
  q     w     e     r      t    _     y     u     i     o     p    
  @thar @thsa @thdc @thfs  g    @lrhl h     @thjs @thkc @thla @thsr
  z     x     c     v      _    _     _     m     ,     .     /    
  _     _     _     _      _    _     _     _     _     _     _    
)

(deflayer nv
  _    _    _    _    _    _   @red @pas @cop @cut @und     
  _    _    _    _    _    _   left down up   rght '        
  _    _    _    _    _    _   home pgdn pgup end  _        
  _    _    _    _    _    _   _    del  _    _    _        
)

(deflayer nm
  7    8    9    0   /  _   _   _    _    _    _    
  4    5    6    -   +  _   _   _    _    _    _    
  1    2    3    .   _  _   _   _    _    _    _    
  _    _    _    =   _  _   _   _    _    _    _    
)

(deflayer bsm
  _    _    _    _   _   _   \(  \)   *    &    ?  
  _    _    _    _   _   _   [   ]    ^    %    $  
  _    _    _    _   _   _   {   }    #    @    !  
  _    _    _    _   _   _   _   _    _    _    _  
)

(deflayer sf
  `    _    ~    \(  \)  _   _   _    _    _    _ 
  '    *    "    [   ]   _   _   _    _    _    _ 
  \    \_   |    {   }   _   _   _    _    _    _ 
  _    _    _    _   _   _   _   _    _    _    _ 
)

(deflayer fn
  f7   f8   f9   f10  _   _   _   _   _   _    _ 
  f4   f5   f6   f11  _   _   _   _   _   _    _ 
  f1   f2   f3   f12  _   _   _   _   _   _    _ 
  _    _    _    _    _   _   _   _   _   _    _ 
)


